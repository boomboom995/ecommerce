<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.customer.ecommerce.dao.OrderMapper">

    <resultMap id="OrderDetailResultMap" type="com.customer.ecommerce.model.Order">
        <id property="id" column="order_id"/>
        <result property="customerId" column="customer_id"/>
        <result property="shippingAddress" column="shipping_address"/> <result property="originalAmount" column="original_amount"/>
        <result property="discountAmount" column="discount_amount"/>
        <result property="totalAmount" column="total_amount"/>
        <result property="couponCode" column="coupon_code"/>
        <result property="status" column="status"/>
        <result property="orderDate" column="order_date"/>
    </resultMap>

    <insert id="insertOrder" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO orders (customer_id, shipping_address, original_amount, discount_amount, total_amount, coupon_code, status, order_date)
        VALUES (#{customerId}, #{shippingAddress}, #{originalAmount}, #{discountAmount}, #{totalAmount}, #{couponCode}, #{status}, #{orderDate})
    </insert>

    <select id="findById" resultMap="OrderDetailResultMap">
        SELECT
            o.id as order_id, o.customer_id, o.shipping_address, o.original_amount, o.discount_amount, o.total_amount, o.coupon_code, o.status, o.order_date,
            c.id as customer_id_for_customer_map,
            c.name as customer_name,
            c.email as customer_email,
            c.phone as customer_phone,
            c.address as customer_address,
            oi.id as item_id,
            oi.order_id as order_id_for_item_map,
            oi.variant_id,
            oi.quantity,
            oi.price,
            oi.is_returned
        FROM orders o
                 JOIN customers c ON o.customer_id = c.id
                 LEFT JOIN order_items oi ON o.id = oi.order_id
        WHERE o.id = #{id}
    </select>

</mapper>